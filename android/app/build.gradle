plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.github.igrmk.smsq"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 16
        versionName "1.6.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    applicationVariants.all { variant ->
        variant.resValue "string", "version_name", "smsQ " + variant.versionName
        variant.outputs.all { outputFileName = "smsq-${variant.name}-${variant.versionName}.apk" }
    }
    signingConfigs {
        play
    }
    buildTypes {
        play {
            minifyEnabled false
            debuggable false
            signingConfig signingConfigs.play
        }
        release {
            minifyEnabled false
            debuggable false
        }
        debug {
            minifyEnabled false
            debuggable true
        }
        staging {
            initWith debug
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'com.github.kittinunf.fuel:fuel:1.12.1'
    implementation 'com.github.kittinunf.fuel:fuel-android:1.12.1'
    implementation 'org.jetbrains.anko:anko-sqlite:0.10.4'
    implementation 'org.jetbrains.anko:anko-common:0.10.4'
    implementation 'com.google.crypto.tink:tink-android:1.3.0'
    implementation 'us.feras.mdv:markdownview:1.1.0'
    implementation 'com.github.igrmk:dull:1.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.canRead()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    android.signingConfigs.play.storeFile = file(keystoreProperties['storeFile'])
    android.signingConfigs.play.storePassword = keystoreProperties['storePassword']
    android.signingConfigs.play.keyAlias = keystoreProperties['keyAlias']
    android.signingConfigs.play.keyPassword = keystoreProperties['keyPassword']
} else {
    android.buildTypes.release.signingConfig = null
}
